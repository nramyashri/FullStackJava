
Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string.
Example 1:

Input: s = "abc"
Output: 3
Explanation: Three palindromic strings: "a", "b", "c".
Example 2:

Input: s = "aaa"
Output: 6
Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".

import java.util.*;
class Solution {
    public int countSubstrings(String s) {
        int c=0;
        int n=s.length();
        for(int i=0;i<n;i++){
            for(int j=i+1;j<=n;j++)
            {
                if(isPalindrome(s.substring(i,j)))
                    c++;
            }
        }
        
        return c;
        
    }
    boolean isPalindrome(String s){
    String rev = new StringBuffer(s).reverse().toString();
        if(rev.equals(s))
            return true;
        else
            return false;
        
    }
}